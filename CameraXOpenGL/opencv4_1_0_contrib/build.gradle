// This file is part of OpenCV project.
// It is subject to the license terms in the LICENSE file found in the top-level directory
// of this distribution and at http://opencv.org/license.html.

//
// Notes about integration OpenCV into existed Android Studio application project are below (application "app" module should exist).
//
// This file is located in <OpenCV-android-sdk>/sdk directory (near "etc", "java", "native" subdirectories)
//
// Add module into Android Studio application project:
//
// - Android Studio way:
//   (will copy almost all OpenCV Android SDK into your project, ~200Mb)
//
//   Import module: Menu -> "File" -> "New" -> "Module" -> "Import Gradle project":
//   Source directory: select this "sdk" directory
//   Module name: ":opencv"
//
// - or attach library module from OpenCV Android SDK
//   (without copying into application project directory, allow to share the same module between projects)
//
//   Edit "settings.gradle" and add these lines:
//
//   def opencvsdk="<path_to_opencv_android_sdk_rootdir>"
//   // You can put declaration above into gradle.properties file instead (including file in HOME directory),
//   // but without "def" and apostrophe symbols ("): opencvsdk=<path_to_opencv_android_sdk_rootdir>
//   include ":opencv"
//   project(":opencv").projectDir = new File(opencvsdk + "/sdk")
//
//
//
// Add dependency into application module:
//
// - Android Studio way:
//   "Open Module Settings" (F4) -> "Dependencies" tab
//
// - or add "project(":opencv")" dependency into app/build.gradle:
//
//   dependencies {
//       implementation fileTree(dir: "libs", include: ["*.jar"])
//       ...
//       implementation project(":opencv")
//   }
//
//
//
// Load OpenCV native library before using:
//
// - avoid using of "OpenCVLoader.initAsync()" approach - it is deprecated
//   It may load library with different version (from OpenCV Android Manager, which is installed separatelly on device)
//
// - use "System.loadLibrary("opencv_java4")" or "OpenCVLoader.initDebug()"
//   TODO: Add accurate API to load OpenCV native library
//
//
//
// Native C++ support (necessary to use OpenCV in native code of application only):
//
// - Use find_package() in app/CMakeLists.txt:
//
//   find_package(OpenCV 3.4 REQUIRED java)
//   ...
//   target_link_libraries(native-lib ${OpenCV_LIBRARIES})
//
// - Add "OpenCV_DIR" and enable C++ exceptions/RTTI support via app/build.gradle
//   Documentation about CMake options: https://developer.android.com/ndk/guides/cmake.html
//
//   defaultConfig {
//       ...
//       externalNativeBuild {
//           cmake {
//               cppFlags "-std=c++11 -frtti -fexceptions"
//               arguments "-DOpenCV_DIR=" + opencvsdk + "/sdk/native/jni" // , "-DANDROID_ARM_NEON=TRUE"
//           }
//       }
//   }
//
// - (optional) Limit/filter ABIs to build ("android" scope of "app/build.gradle"):
//   Useful information: https://developer.android.com/studio/build/gradle-tips.html (Configure separate APKs per ABI)
//
//   splits {
//       abi {
//           enable true
//           universalApk false
//           reset()
//           include "armeabi-v7a" // , "x86", "x86_64", "arm64-v8a"
//       }
//   }
//

apply plugin: "com.android.library"
apply plugin: "maven-publish"

ext {
    bintrayOrg = "quickbirdstudios"
    bintrayRepo = "android"
    bintrayName = "opencv"

    publishedGroupId = "com.quickbirdstudios"
    libraryName = "opencv"
    artifact = "opencv"

    libraryDescription = "QuickBird Studios Bundle for OpenCV"

    gitUrl = "https://github.com/quickbirdstudios/opencv-android"
    siteUrl = "http://quickbirdstudios.com"


    libraryVersion = "4.1.0-contrib"

    developerId = "quickbirdstudios"
    developerName = "QuickBird Studios GmbH"
    developerEmail = "contact@quickbirdstudios.com"

    licenseName = "3-clause BSD License"
    licenseUrl = "https://opencv.org/license.html"
    allLicenses = ["BSD 3-Clause"]
}


println "OpenCV: " + project.buildscript.sourceFile

android {
    compileSdkVersion 26
    //buildToolsVersion "x.y.z" // not needed since com.android.tools.build:gradle:3.0.0

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ["native/libs"]
            java.srcDirs = ["java/src"]
            aidl.srcDirs = ["java/src"]
            res.srcDirs = ["java/res"]
            manifest.srcFile "java/AndroidManifest.xml"
        }
    }
}

dependencies {
}



apply plugin: "com.github.dcendents.android-maven"
group = publishedGroupId                               // Maven Group ID for the artifact


apply plugin: "com.jfrog.bintray"
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        aar(MavenPublication) {

            // Thanks to https://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
            // ###############################################################
            pom.withXml {
                def dependenciesNode = asNode().appendNode("dependencies")

                //Iterate over the compile dependencies (we don"t want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode("dependency")
                    dependencyNode.appendNode("groupId", it.group)
                    dependencyNode.appendNode("artifactId", it.name)
                    dependencyNode.appendNode("version", it.version)
                }

            }
            // ##############################################################


            groupId "$publishedGroupId"
            version = "$libraryVersion"
            artifactId "$bintrayName"

            artifact("$buildDir/outputs/aar/opencv4_1_0_contrib.aar")
            artifact sourceJar
        }
    }
}

// Bintray
bintray {
    user = "$bintray_user"
    key = "$bintray_apikey"
    publications = ["aar"]
    pkg {
        userOrg = bintrayOrg
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            name = "$libraryVersion"
            desc = "$libraryVersion"
            gpg {
                sign = false //Determines whether to GPG sign the files. The default is false
                passphrase = "$bintray_gpg_password"
                //Optional. The passphrase for GPG signing"
            }
        }
    }
}